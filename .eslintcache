[{"/home/sushant/Desktop/projects/01react-projects/ai-faq-app/src/index.js":"1","/home/sushant/Desktop/projects/01react-projects/ai-faq-app/src/App.js":"2","/home/sushant/Desktop/projects/01react-projects/ai-faq-app/src/reportWebVitals.js":"3","/home/sushant/Desktop/projects/01react-projects/ai-faq-app/src/serviceWorker.js":"4","/home/sushant/Desktop/projects/01react-projects/ai-faq-app/src/ColorModeSwitcher.js":"5","/home/sushant/Desktop/projects/01react-projects/ai-faq-app/src/Logo.js":"6","/home/sushant/Desktop/projects/01react-projects/ai-faq-app/src/Navbar.js":"7","/home/sushant/Desktop/projects/01react-projects/ai-faq-app/src/Faq.js":"8"},{"size":840,"mtime":1612321190746,"results":"9","hashOfConfig":"10"},{"size":1420,"mtime":1612362735427,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1612321190746,"results":"12","hashOfConfig":"10"},{"size":5081,"mtime":1612321190746,"results":"13","hashOfConfig":"10"},{"size":852,"mtime":1612363068618,"results":"14","hashOfConfig":"10"},{"size":489,"mtime":1612321190746,"results":"15","hashOfConfig":"10"},{"size":550,"mtime":1612362774983,"results":"16","hashOfConfig":"10"},{"size":1221,"mtime":1612363489426,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1c1keqo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/sushant/Desktop/projects/01react-projects/ai-faq-app/src/index.js",[],["36","37"],"/home/sushant/Desktop/projects/01react-projects/ai-faq-app/src/App.js",[],"/home/sushant/Desktop/projects/01react-projects/ai-faq-app/src/reportWebVitals.js",[],"/home/sushant/Desktop/projects/01react-projects/ai-faq-app/src/serviceWorker.js",[],"/home/sushant/Desktop/projects/01react-projects/ai-faq-app/src/ColorModeSwitcher.js",["38"],"import React, { useRef, useEffect } from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = ({ toggleColorFlag, ...rest }) => {\n  const firstUpdate = useRef(true)\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    toggleColorMode()\n  }, [toggleColorFlag])\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...rest}\n    />\n  );\n};\n","/home/sushant/Desktop/projects/01react-projects/ai-faq-app/src/Logo.js",[],"/home/sushant/Desktop/projects/01react-projects/ai-faq-app/src/Navbar.js",[],"/home/sushant/Desktop/projects/01react-projects/ai-faq-app/src/Faq.js",["39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":17,"column":6,"nodeType":"47","endLine":17,"endColumn":23,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":21,"nodeType":"51","messageId":"52","endLine":2,"endColumn":25},{"ruleId":"49","severity":1,"message":"53","line":2,"column":95,"nodeType":"51","messageId":"52","endLine":2,"endColumn":108},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toggleColorMode'. Either include it or remove the dependency array.","ArrayExpression",["56"],"no-unused-vars","'Flex' is defined but never used.","Identifier","unusedVar","'AccordionIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [toggleColorFlag, toggleColorMode]",{"range":"59","text":"60"},[569,586],"[toggleColorFlag, toggleColorMode]"]